name: Docker Image CI

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ "v*.*.*" ]

jobs:
  build-docker-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK
        if: ${{ startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push' }}
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: "temurin"
          cache: maven

      # Étape pour enlever "-SNAPSHOT" dans le pom.xml
      - name: Remove -SNAPSHOT from pom.xml
        if: ${{ startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push' }}
        run: mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false

      # Génération des tags Docker (optionnel)
      - name: Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # Connexion à GHCR
      - name: Login to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build & push de l'image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      # Déploiement de l'image Docker (optionnel)
      - name: Deploy
        if: ${{ startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push' }}
        uses: joelwmale/webhook-action@2.4.1
        with:
          url: ${{ secrets.DEPLOY_WEBHOOK_URL }}
