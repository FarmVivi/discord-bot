name: Release Build

permissions:
  contents: write   # pour uploader l’artefact sur la release

on:
  release:
    types: [ created ]

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: "temurin"
          cache: maven

      # Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4.2.3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Étape pour enlever "-SNAPSHOT" dans le pom.xml
      - name: Remove -SNAPSHOT from pom.xml
        run: mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false

      # Construction Maven
      - name: Build with Maven
        run: mvn package -DskipTests

      # On récupère le vrai nom du .jar (ex: discordbot-core-1.2.3.jar)
      - name: Find built jar name
        id: find_jar
        shell: bash
        run: echo "jar_name=$(basename $(ls target/discordbot-core-*.jar))" >> $GITHUB_OUTPUT

      # Upload du .jar sur la release GitHub
      - name: Upload JAR to release
        uses: softprops/action-gh-release@v2.3.0
        with:
          files: target/${{ steps.find_jar.outputs.jar_name }}
